==================================================================

###   I. PLATFORMS SUPPORT   ###

==================================================================

1) Fedora official package.

2) MS Windows support.

	Cygwin is supported. A "real" MS-Windows port would 
	involve a usable GUI.

==================================================================

###   II. DOCS   ###

==================================================================

1) User's manual.

2) Developer's manual.

==================================================================

###   III. NETWORK ENGINE   ###

==================================================================

1) Kernel module for data channels.

==================================================================

###   IV. PERFORMANCE OPTIMIZATION   ###

==================================================================

1) A smarter load balancer has to be implemented.

	The load balancer has to have a heartbeat channels with 
	the slave servers, currently it is only just a dumb 
	round-robin load distributor.

==================================================================

###   V. SECURITY   ###

==================================================================

1) EC curve new features in OpenSSL 1.0.2
 
==================================================================

###   VI. STANDARDS SUPPORT   ###

==================================================================

1) For extra difficult NAT/FWs, consider implementing Websockets.

2) Redirect draft.

3) STUN-bis: new integrity attribute, algorithms.

4) Third-party authorization updates.

==================================================================

###   VII. MISC FEATURES   ###

==================================================================

1) Locale support (?).

	Currently we assume that all text data is 8-bits ASCII 
	encoded, like C locale. It would be nice to support localized
	strings (both 8-bits and 2-bytes). But I am not sure 
	whether this is really important, given the essentially
	backend nature of the TURN Server. The TURN server is so 
	deeply "hidden" in the network infrastructure that the 
	significant code complication may be unjustified.

2) Traffic recording (for selected allocations).

	That would be a helpful feature for a large enterprise 
	(for testing and security purposes). 

3) Ganglia monitoring.

4) Key exchange mechanism for oAuth.

==================================================================

###   VIII. CODING STUFF   ###

==================================================================

1) Peer app for TCP relay.

==================================================================

